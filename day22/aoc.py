#!/usr/bin/env python3

"""
0 -1
1 2307
2 2574
3 2628
4 2492
5 2457
6 2398
7 2414
8 2226
9 2245
10
"""

import sys

lines = []
for line in sys.stdin:
    p1,p2 = line.strip().split('~')
    p1 = p1.split(',')
    p2 = p2.split(',')
    line = []
    for i in range(3):
        line.append(int(p1[i]))
        line.append(int(p2[i]))
    lines.append(line)






from functools import lru_cache 

def intersect(line1, line2):
    @lru_cache(maxsize=None)
    def possible(x1,x2,y1,y2,z1,z2):
        m1, m2 = 0,0
        possible = []
        if x1 == x2 and y1 == y2:
            m1, m2 = min(z1,z2), max(z1,z2)
            for i in range(m1,m2+1):
                possible.append((x1,y1,i))
        elif x1 == x2 and z1 == z2:
            m1, m2 = min(y1,y2), max(y1,y2)
            for i in range(m1,m2+1):
                possible.append((x1,i,z1))
        elif y1 == y2 and z1 == z2:
            m1, m2 = min(x1,x2), max(x1,x2)
            for i in range(m1,m2+1):
                possible.append((i,y1,z1))
        return possible
    flag = False
    for coord in possible(*line1):
        for coord2 in possible(*line2):
            if coord == coord2:
                flag = True
                return flag
    return flag


if False:
    lines.sort(key=lambda x: min(x[-1],x[-2]))
    changes = -1 
    it = 0
    while changes != 0 and it < 20:
        print(it, changes)
        it +=1
        changes = 0 
        for i in range(len(lines)):
            flag = False
            while not flag and lines[i][-1] and lines[i][-2]> 0:
                for j in range(len(lines)):
                    if i != j and max(lines[j][:-2]) >= min(lines[i][:-2]):
                        if intersect(lines[i], lines[j]):
                            flag = True
                            break
                if flag == False:
                    lines[i][-1] -= 1
                    lines[i][-2] -= 1
                    changes += 1
            if i % 10 == 0:
                print(i, changes)
            changes -= 1
            lines[i][-1] += 1
            lines[i][-2] += 1


    grid = [list('.'*20) for _ in range(20)]
    for i, line in enumerate(lines):
        x1,x2,y1,y2,z1,z2 = line
        x1,x2 = min(x1,x2), max(x1,x2) 
        z1,z2 = min(z1,z2), max(z1,z2) 
        for x in range(x1, x2+1):
            for z in range(z1, z2+1):
                if z < 20 and x < 20:
                    grid[z][x] = str(i) 
    print('\n'.join((''.join(x) for x in reversed(grid))))
    """
    print('~~~~~')
    lines.sort(key=lambda x: min(x[-1],x[-2]))
    grid = [list('...') for _ in range(10)]
    for i, line in enumerate(lines):
        x1,x2,y1,y2,z1,z2 = line
        for x in range(y1, y2+1):
            for z in range(z1, z2+1):
                grid[z][x] = chr(i+65) 
    print('\n'.join((''.join(x) for x in reversed(grid))))
    """

    from collections import defaultdict
    adj = defaultdict(list)
    for i in range(len(lines)):
        if chr(i+65) not in adj:
            adj[chr(i+65)] = []
        flag = False
        count = 0
        lines[i][-1] -= 1
        lines[i][-2] -= 1
        for j in range(len(lines)):
            if i != j:
                if intersect(lines[i], lines[j]):
                    adj[chr(j+65)].append(chr(i+65))
        lines[i][-1] += 1
        lines[i][-2] += 1
else:
    adj = {}
    adj = {'A': ['U'], 'B': ['H'], 'C': ['R'], 'D': ['\\'], 'E': [], 'F': ['['], 'G': ['Q'], 'H': [], 'I': [], 'J': ['U', 'X'], 'K': ['W'], 'L': [], 'M': ['S'], 'N': ['^'], 'O': ['T', ']'], 'P': [], 'Q': [], 'R': ['Y', 'c', 'q'], 'S': [], 'T': ['V'], 'U': ['i'], 'V': ['_'], 'W': [], 'X': ['Z'], 'Y': ['s'], 'Z': ['h'], '[': ['`', 'j', 'l'], '\\': ['b', 't'], ']': ['g', 'k', 'q'], '^': ['a', 'e'], '_': ['u'], '`': ['f'], 'a': [], 'b': ['p'], 'c': ['d', 'm', 'n'], 'd': ['\x8b'], 'e': [], 'f': ['\x87'], 'g': ['z'], 'h': ['}'], 'i': ['o'], 'j': ['r', 'y'], 'k': ['z', '|'], 'l': ['w'], 'm': ['{'], 'n': ['x', '\x89'], 'o': ['v', '\x8a'], 'p': [], 'q': ['\x86'], 'r': ['\x7f'], 's': [], 't': ['\x84'], 'u': ['~'], 'v': [], 'w': ['\x80'], 'x': ['\x99'], 'y': ['\x7f', '\x88', '\x8d'], 'z': [], '{': ['\x81'], '|': [], '}': ['\x85'], '~': [], '\x7f': ['\x82', '\x83'], '\x80': ['\x92'], '\x81': [], '\x82': [], '\x83': [], '\x84': ['\x98'], '\x85': [], '\x86': ['\x8e'], '\x87': ['\x8c', '\x8f'], '\x88': ['¨'], '\x89': ['\x90', '\x91'], '\x8a': ['¥'], '\x8b': ['\x95', '\x9c'], '\x8c': ['§'], '\x8d': ['\x93', '\x96', '\x9e'], '\x8e': ['\x94'], '\x8f': ['¢'], '\x90': [], '\x91': ['\x9a'], '\x92': ['\x97', '¡'], '\x93': [], '\x94': ['\x9b', '¤'], '\x95': ['\x9d', '«'], '\x96': ['\xa0'], '\x97': ['£'], '\x98': ['°'], '\x99': ['ª'], '\x9a': [], '\x9b': ['¦', '¯'], '\x9c': [], '\x9d': [], '\x9e': ['\x9f', '\xa0'], '\x9f': ['©', '¬'], '\xa0': ['¨'], '¡': ['®'], '¢': [], '£': ['¸'], '¤': [], '¥': [], '¦': ['±'], '§': ['µ', '¹', '»'], '¨': ['²', '¾'], '©': ['\xad', '³'], 'ª': ['¼', 'À'], '«': [], '¬': [], '\xad': ['´'], '®': ['¿', 'Ã'], '¯': ['À'], '°': [], '±': ['¶', 'Å'], '²': ['·', 'Á'], '³': ['´'], '´': ['º', '½', 'Æ'], 'µ': [], '¶': ['Ç'], '·': [], '¸': ['Â'], '¹': ['Ë'], 'º': [], '»': ['Ì'], '¼': [], '½': ['Í', 'à'], '¾': ['Ä'], '¿': ['Ð'], 'À': [], 'Á': ['È', 'Ñ'], 'Â': ['Ó'], 'Ã': ['Ê'], 'Ä': ['Î', 'Ô'], 'Å': [], 'Æ': ['É'], 'Ç': [], 'È': ['ß'], 'É': ['Ï'], 'Ê': ['Õ', 'Ù'], 'Ë': ['Ú', 'í'], 'Ì': ['ă'], 'Í': ['Û'], 'Î': ['ß'], 'Ï': ['×', 'Ø', 'î'], 'Ð': ['Ò'], 'Ñ': ['Ý', 'ß', 'à'], 'Ò': ['Ö', 'Ü', 'â'], 'Ó': ['Þ'], 'Ô': [], 'Õ': [], 'Ö': [], '×': ['á', 'æ', 'Ă'], 'Ø': ['ü'], 'Ù': ['ç', 'é'], 'Ú': [], 'Û': ['å'], 'Ü': ['è'], 'Ý': ['ä'], 'Þ': [], 'ß': ['ó'], 'à': ['ã'], 'á': [], 'â': ['ê'], 'ã': ['ì', 'î', 'ð', 'ò'], 'ä': ['ð'], 'å': ['ï', 'ú'], 'æ': ['ô'], 'ç': ['ø'], 'è': ['ö'], 'é': ['ë'], 'ê': ['ñ'], 'ë': [], 'ì': ['Ĉ'], 'í': ['÷'], 'î': ['û', 'ü', 'Ă'], 'ï': ['ô', 'ù'], 'ð': ['Ā', 'Ą'], 'ñ': ['þ'], 'ò': ['õ'], 'ó': ['ÿ'], 'ô': ['ā'], 'õ': ['đ'], 'ö': [], '÷': ['ý'], 'ø': [], 'ù': [], 'ú': [], 'û': ['ć'], 'ü': ['Ć'], 'ý': ['ĉ'], 'þ': ['Č'], 'ÿ': ['ą'], 'Ā': ['Ć', 'Ē'], 'ā': [], 'Ă': [], 'ă': ['Ď'], 'Ą': ['Ē'], 'ą': ['Ė'], 'Ć': ['Ĕ', 'ĕ'], 'ć': ['Đ'], 'Ĉ': ['ċ'], 'ĉ': ['Ċ', 'č'], 'Ċ': ['ħ'], 'ċ': ['ģ'], 'Č': ['ď', 'ē'], 'č': ['ĳ'], 'Ď': ['ě'], 'ď': ['Ę', 'Ĝ', 'ġ'], 'Đ': ['ė', 'ĝ'], 'đ': ['ğ', 'į'], 'Ē': ['Ġ'], 'ē': ['Ğ'], 'Ĕ': ['ę', 'ĥ'], 'ĕ': [], 'Ė': ['Ě'], 'ė': [], 'Ę': [], 'ę': ['į'], 'Ě': [], 'ě': [], 'Ĝ': ['Ģ'], 'ĝ': ['Į'], 'Ğ': [], 'ğ': ['Ĥ', 'Ħ', 'ī'], 'Ġ': ['ĩ'], 'ġ': ['İ'], 'Ģ': ['ĭ', 'Ĵ'], 'ģ': ['Ĩ', 'Ĭ'], 'Ĥ': [], 'ĥ': ['į'], 'Ħ': ['Ī'], 'ħ': [], 'Ĩ': ['Ķ'], 'ĩ': [], 'Ī': ['ĸ'], 'ī': ['ľ'], 'Ĭ': ['Ĳ'], 'ĭ': ['ı', 'Ľ'], 'Į': ['Ĺ'], 'į': [], 'İ': ['Ļ'], 'ı': ['ĵ'], 'Ĳ': ['ķ', 'ŀ'], 'ĳ': [], 'Ĵ': [], 'ĵ': ['Ŋ'], 'Ķ': ['ł'], 'ķ': [], 'ĸ': ['ļ', 'Ŀ'], 'Ĺ': ['ĺ'], 'ĺ': ['ń', 'ņ', 'Ň'], 'Ļ': [], 'ļ': ['Ń'], 'Ľ': ['ň'], 'ľ': ['Ł', 'Ō'], 'Ŀ': ['Œ'], 'ŀ': ['ō'], 'Ł': ['ū'], 'ł': ['ŏ'], 'Ń': ['Ņ', 'ŉ', 'Ő'], 'ń': [], 'Ņ': ['Ŏ'], 'ņ': ['ŕ'], 'Ň': [], 'ň': ['ŋ'], 'ŉ': ['Ŏ', 'ő'], 'Ŋ': [], 'ŋ': [], 'Ō': [], 'ō': ['ŗ', 'ř'], 'Ŏ': ['ş'], 'ŏ': ['œ'], 'Ő': [], 'ő': ['Ŕ', 'Ŗ'], 'Œ': ['ŝ'], 'œ': ['Ř'], 'Ŕ': ['Ś', 'Ŝ'], 'ŕ': ['ś'], 'Ŗ': [], 'ŗ': ['Ţ'], 'Ř': [], 'ř': ['Ţ'], 'Ś': ['Š', 'ţ'], 'ś': ['Ş', 'š'], 'Ŝ': ['Ť', 'Ũ', 'ũ'], 'ŝ': ['Ũ', 'ũ'], 'Ş': ['Ű'], 'ş': ['ů'], 'Š': ['ŭ'], 'š': ['Ŧ', 'ū', 'Ű', 'ŵ'], 'Ţ': ['ť', 'Ŭ', 'ų'], 'ţ': ['ŧ', 'Ů'], 'Ť': ['Ū', 'ŷ', 'Ɔ'], 'ť': [], 'Ŧ': ['Ų'], 'ŧ': ['ź'], 'Ũ': ['Ÿ'], 'ũ': [], 'Ū': [], 'ū': [], 'Ŭ': ['Ƈ'], 'ŭ': ['Ŷ'], 'Ů': ['Ŵ', 'Ż'], 'ů': ['ű'], 'Ű': ['ſ'], 'ű': [], 'Ų': ['ž', 'Ƃ'], 'ų': ['ƀ', 'Ƈ'], 'Ŵ': ['ż'], 'ŵ': ['Ź'], 'Ŷ': [], 'ŷ': ['Ɓ', 'Ɖ'], 'Ÿ': ['ƅ'], 'Ź': [], 'ź': ['Ž'], 'Ż': ['ƈ', 'Ɗ'], 'ż': ['ƕ'], 'Ž': ['Ƅ'], 'ž': ['Ə', 'Ɛ'], 'ſ': [], 'ƀ': ['ƃ', 'Ǝ'], 'Ɓ': [], 'Ƃ': ['ƌ'], 'ƃ': [], 'Ƅ': ['Ɣ'], 'ƅ': ['Ƌ'], 'Ɔ': ['ƍ'], 'Ƈ': ['ƒ'], 'ƈ': ['Ƒ', 'Ɠ'], 'Ɖ': ['ơ'], 'Ɗ': [], 'Ƌ': [], 'ƌ': [], 'ƍ': ['Ɨ', 'Ɲ'], 'Ǝ': [], 'Ə': ['Ƙ', 'Ɯ'], 'Ɛ': ['ƚ', 'Ɵ'], 'Ƒ': ['ƛ'], 'ƒ': ['Ɩ'], 'Ɠ': ['ƞ', 'ƣ'], 'Ɣ': [], 'ƕ': ['Ơ', 'Ʃ'], 'Ɩ': ['Ƨ'], 'Ɨ': ['ƙ'], 'Ƙ': ['ƥ', 'ƪ'], 'ƙ': ['Ʀ'], 'ƚ': ['Ƥ'], 'ƛ': ['Ƭ'], 'Ɯ': ['ƪ'], 'Ɲ': ['Ƣ'], 'ƞ': [], 'Ɵ': [], 'Ơ': ['ƭ'], 'ơ': ['ƨ'], 'Ƣ': ['Ʈ'], 'ƣ': [], 'Ƥ': [], 'ƥ': ['Ƴ'], 'Ʀ': ['ƴ'], 'Ƨ': ['ƫ'], 'ƨ': ['Ƶ'], 'Ʃ': ['Ư'], 'ƪ': ['Ʊ'], 'ƫ': ['ƹ'], 'Ƭ': ['ư'], 'ƭ': ['Ʋ'], 'Ʈ': ['Ƹ', 'ǉ'], 'Ư': [], 'ư': ['ƶ', 'Ʒ'], 'Ʊ': [], 'Ʋ': [], 'Ƴ': ['ƽ'], 'ƴ': ['ƺ'], 'Ƶ': [], 'ƶ': ['ƻ'], 'Ʒ': ['ǀ', 'ǂ'], 'Ƹ': ['Ƽ'], 'ƹ': ['ǁ'], 'ƺ': ['ƾ'], 'ƻ': ['ƿ', 'Ǆ', 'ǆ'], 'Ƽ': ['Ǚ'], 'ƽ': ['ǅ'], 'ƾ': [], 'ƿ': ['ǃ', 'ǋ'], 'ǀ': [], 'ǁ': ['Ǒ'], 'ǂ': ['Ǆ', 'Ǉ'], 'ǃ': ['Ǌ'], 'Ǆ': ['ǋ'], 'ǅ': ['ǉ', 'ǌ'], 'ǆ': ['ǈ'], 'Ǉ': ['Ǔ', 'ǘ', 'ǚ'], 'ǈ': ['Ǎ', 'ǎ', 'ǐ', 'ǔ'], 'ǉ': ['Ǐ', 'ǜ'], 'Ǌ': ['ǖ'], 'ǋ': ['ǯ'], 'ǌ': ['Ǖ', 'ǟ', 'Ǥ'], 'Ǎ': ['ǒ', 'Ǡ', 'ǧ'], 'ǎ': ['Ǜ', 'Ǡ', 'ǥ'], 'Ǐ': ['Ǘ'], 'ǐ': ['Ǡ', 'ǡ'], 'Ǒ': [], 'ǒ': ['ǫ', 'Ƕ'], 'Ǔ': ['Ǭ'], 'ǔ': [], 'Ǖ': ['ǝ'], 'ǖ': ['Ǟ', 'ǭ', 'Ǳ'], 'Ǘ': [], 'ǘ': ['ǣ', 'ǲ'], 'Ǚ': [], 'ǚ': ['Ǭ', 'ǯ'], 'Ǜ': [], 'ǜ': ['Ǣ'], 'ǝ': [], 'Ǟ': ['ǹ'], 'ǟ': ['Ǧ', 'Ǫ'], 'Ǡ': ['ǰ'], 'ǡ': [], 'Ǣ': ['ǩ'], 'ǣ': ['Ǩ', 'Ǯ'], 'Ǥ': ['ǳ'], 'ǥ': ['Ǽ'], 'Ǧ': ['ǵ'], 'ǧ': [], 'Ǩ': [], 'ǩ': [], 'Ǫ': [], 'ǫ': ['Ǻ', 'ǻ'], 'Ǭ': ['ǽ'], 'ǭ': ['Ǵ', 'Ǹ'], 'Ǯ': ['ȉ'], 'ǯ': [], 'ǰ': [], 'Ǳ': ['Ǿ'], 'ǲ': [], 'ǳ': ['ǿ', 'Ȃ', 'Ȅ'], 'Ǵ': ['Ȇ'], 'ǵ': ['Ƿ', 'ȃ'], 'Ƕ': ['ȁ'], 'Ƿ': ['ȅ'], 'Ǹ': [], 'ǹ': [], 'Ǻ': ['ȇ'], 'ǻ': ['ȑ'], 'Ǽ': ['Ȁ', 'Ȋ'], 'ǽ': [], 'Ǿ': ['Ȍ'], 'ǿ': [], 'Ȁ': ['Ȑ'], 'ȁ': ['Ȉ'], 'Ȃ': [], 'ȃ': [], 'Ȅ': [], 'ȅ': ['ȋ'], 'Ȇ': ['Ȏ', 'ȓ'], 'ȇ': [], 'Ȉ': ['ȍ', 'Ȓ', 'Ȗ', 'Ș'], 'ȉ': ['ȏ', 'ȕ'], 'Ȋ': ['ȗ'], 'ȋ': [], 'Ȍ': [], 'ȍ': [], 'Ȏ': ['Ȕ'], 'ȏ': [], 'Ȑ': [], 'ȑ': ['ȝ', 'Ƞ'], 'Ȓ': ['ș', 'ȟ', 'ȣ'], 'ȓ': ['Ȝ', 'Ȣ'], 'Ȕ': [], 'ȕ': ['Ț', 'ț'], 'Ȗ': ['ȭ'], 'ȗ': ['Ȟ', 'Ȧ'], 'Ș': ['ȟ', 'ȥ'], 'ș': [], 'Ț': ['Ȫ'], 'ț': ['Ȫ'], 'Ȝ': [], 'ȝ': ['ȡ', 'Ȥ'], 'Ȟ': ['ȟ', 'ȫ'], 'ȟ': [], 'Ƞ': ['ȯ'], 'ȡ': [], 'Ȣ': ['ȧ', 'Ȯ'], 'ȣ': ['Ȩ'], 'Ȥ': ['ȩ', 'Ȭ', 'Ȱ'], 'ȥ': ['Ȳ'], 'Ȧ': [], 'ȧ': ['ȴ', 'ȵ'], 'Ȩ': [], 'ȩ': ['ȶ', 'ȸ'], 'Ȫ': [], 'ȫ': ['ȱ', 'ȳ'], 'Ȭ': ['ȶ', 'ȸ'], 'ȭ': [], 'Ȯ': ['ȴ', 'ȵ'], 'ȯ': ['Ȼ'], 'Ȱ': ['ȼ'], 'ȱ': [], 'Ȳ': ['ȷ', 'Ⱦ'], 'ȳ': ['ȹ', 'ȿ'], 'ȴ': [], 'ȵ': ['Ⱥ', 'ɀ'], 'ȶ': ['Ƚ', 'ɂ', 'Ƀ'], 'ȷ': [], 'ȸ': ['Ƚ'], 'ȹ': [], 'Ⱥ': [], 'Ȼ': ['Ʉ'], 'ȼ': ['Ɂ', 'Ʌ', 'Ɇ', 'ɔ'], 'Ƚ': ['ɋ'], 'Ⱦ': ['Ɉ'], 'ȿ': [], 'ɀ': [], 'Ɂ': ['ɒ'], 'ɂ': ['ɇ', 'ɋ'], 'Ƀ': [], 'Ʉ': ['ɉ', 'ɍ', 'ɏ'], 'Ʌ': ['ɑ'], 'Ɇ': ['Ɋ', 'ə'], 'ɇ': ['Ɍ', 'ɓ'], 'Ɉ': ['ɩ'], 'ɉ': ['Ɏ', 'ɐ'], 'Ɋ': ['ɗ'], 'ɋ': ['ɓ', 'ɘ'], 'Ɍ': ['ɨ'], 'ɍ': ['ɖ', 'ɜ'], 'Ɏ': [], 'ɏ': ['ɕ', 'ɖ', 'ɜ'], 'ɐ': ['ɛ'], 'ɑ': ['ɝ'], 'ɒ': ['ɚ', 'ɰ', 'ɿ'], 'ɓ': ['ɞ'], 'ɔ': ['ɧ'], 'ɕ': ['ɥ'], 'ɖ': ['ɠ', 'ɡ', 'ɢ', 'ɣ'], 'ɗ': [], 'ɘ': ['ɤ'], 'ə': [], 'ɚ': ['ɴ'], 'ɛ': [], 'ɜ': ['ɟ'], 'ɝ': ['ɦ'], 'ɞ': ['ɬ', 'ɭ', 'ɯ'], 'ɟ': [], 'ɠ': [], 'ɡ': ['ɫ'], 'ɢ': [], 'ɣ': ['ʆ'], 'ɤ': ['ɳ'], 'ɥ': ['ɷ'], 'ɦ': ['ɰ', 'ɿ'], 'ɧ': ['ɪ'], 'ɨ': ['ɲ'], 'ɩ': ['ɮ', 'ɱ'], 'ɪ': [], 'ɫ': ['ɹ'], 'ɬ': ['ɻ'], 'ɭ': ['ʁ'], 'ɮ': ['ɼ'], 'ɯ': ['ɸ'], 'ɰ': [], 'ɱ': ['ɵ', 'ɶ'], 'ɲ': ['ɽ', 'ʃ'], 'ɳ': [], 'ɴ': ['ʐ', 'ʛ'], 'ɵ': ['ɾ', 'ʀ', 'ʉ'], 'ɶ': [], 'ɷ': ['ɺ'], 'ɸ': ['ʂ', 'ʄ'], 'ɹ': ['ʆ'], 'ɺ': ['ʇ'], 'ɻ': [], 'ɼ': ['ʑ'], 'ɽ': [], 'ɾ': ['ʅ', 'ʍ'], 'ɿ': [], 'ʀ': ['ʊ', 'ʌ'], 'ʁ': [], 'ʂ': [], 'ʃ': ['ʎ', 'ʏ'], 'ʄ': ['ʈ'], 'ʅ': ['ʗ'], 'ʆ': [], 'ʇ': [], 'ʈ': ['ʋ'], 'ʉ': [], 'ʊ': ['ʖ', 'ʙ'], 'ʋ': ['ʛ', 'ʝ'], 'ʌ': ['ʕ'], 'ʍ': ['ʒ', 'ʓ', 'ʜ'], 'ʎ': ['ʔ'], 'ʏ': ['ʘ', 'ʟ'], 'ʐ': [], 'ʑ': [], 'ʒ': ['ʧ'], 'ʓ': ['ʘ'], 'ʔ': ['ʪ'], 'ʕ': ['ʞ', 'ʤ'], 'ʖ': ['ʞ'], 'ʗ': ['ʚ'], 'ʘ': ['ʠ', 'ʢ', 'ʦ'], 'ʙ': ['ʣ', 'ʧ'], 'ʚ': ['ʭ'], 'ʛ': ['ʡ', 'ʨ', 'ʩ'], 'ʜ': ['ʥ'], 'ʝ': ['ʨ'], 'ʞ': ['ʬ'], 'ʟ': [], 'ʠ': [], 'ʡ': ['ʱ'], 'ʢ': [], 'ʣ': ['ʮ', 'ʰ'], 'ʤ': ['ʫ', 'ʳ'], 'ʥ': ['ʴ'], 'ʦ': ['ʯ'], 'ʧ': ['ʳ', 'ʹ'], 'ʨ': ['ʲ', 'ʷ'], 'ʩ': [], 'ʪ': ['ʺ'], 'ʫ': [], 'ʬ': ['ʶ'], 'ʭ': ['ʸ'], 'ʮ': ['ʾ'], 'ʯ': ['˅'], 'ʰ': ['ʻ'], 'ʱ': ['ʼ'], 'ʲ': ['ʼ', 'ˁ'], 'ʳ': ['ʵ'], 'ʴ': ['˂'], 'ʵ': ['ˆ'], 'ʶ': ['ˋ'], 'ʷ': ['˄'], 'ʸ': ['ʽ', '˕'], 'ʹ': ['ʿ'], 'ʺ': ['˃'], 'ʻ': [], 'ʼ': ['ˀ', 'ˇ'], 'ʽ': [], 'ʾ': ['ˌ'], 'ʿ': ['˙'], 'ˀ': [], 'ˁ': ['ˉ'], '˂': ['ˎ'], '˃': ['ˈ', 'ˍ'], '˄': ['˒'], '˅': ['ˊ', 'ˏ'], 'ˆ': [], 'ˇ': ['ː'], 'ˈ': ['˗'], 'ˉ': ['˘'], 'ˊ': ['˓'], 'ˋ': ['ˑ', '˚'], 'ˌ': ['˔'], 'ˍ': ['˖'], 'ˎ': ['˕', '˜'], 'ˏ': ['˔'], 'ː': [], 'ˑ': [], '˒': ['˘'], '˓': ['˝'], '˔': ['˛', 'ˡ'], '˕': [], '˖': ['˟', '˧'], '˗': [], '˘': ['ˠ', '˨'], '˙': ['˜', 'ˢ'], '˚': [], '˛': ['˞'], '˜': ['ˣ', '˥'], '˝': ['ˤ'], '˞': [], '˟': ['˫'], 'ˠ': [], 'ˡ': ['ˣ', '˦'], 'ˢ': ['˩'], 'ˣ': ['˯'], 'ˤ': ['˪'], '˥': ['˯'], '˦': ['ˬ', '˭'], '˧': [], '˨': ['˷'], '˩': ['˲'], '˪': [], '˫': ['ˮ', '˱', '˵'], 'ˬ': ['˰', '˶'], '˭': ['˻'], 'ˮ': ['˳'], '˯': [], '˰': [], '˱': ['˳', '˴'], '˲': ['˸'], '˳': ['˺', '˼'], '˴': ['˺', '˽'], '˵': ['˹', '̄'], '˶': ['̀'], '˷': ['˿'], '˸': ['̃', '̇'], '˹': ['˾', '̈'], '˺': ['́'], '˻': ['̆'], '˼': [], '˽': ['̅', '̎'], '˾': ['̊'], '˿': [], '̀': ['̂'], '́': ['̔'], '̂': [], '̃': ['̉', '̌'], '̄': [], '̅': ['̋'], '̆': [], '̇': ['̌'], '̈': ['̍', '̓'], '̉': [], '̊': [], '̋': ['̑', '̘'], '̌': ['̕'], '̍': ['̏', '̐'], '̎': ['̒', '̛'], '̏': ['̙', '̝'], '̐': ['̗', '̝'], '̑': [], '̒': ['̘'], '̓': [], '̔': ['̖', '̜'], '̕': ['̢'], '̖': ['̚', '̞'], '̗': [], '̘': [], '̙': ['̤'], '̚': [], '̛': [], '̜': ['̟', '̠', '̨'], '̝': ['̡', '̦'], '̞': ['̭'], '̟': ['̥'], '̠': [], '̡': ['̣'], '̢': [], '̣': ['̩', '̬'], '̤': ['̯'], '̥': ['̧', '̫'], '̦': ['̪'], '̧': [], '̨': ['̱'], '̩': ['̹'], '̪': ['̮', '̳', '̶'], '̫': ['̰', '̷', '̺', '̾'], '̬': ['ͅ'], '̭': ['̲'], '̮': ['̵'], '̯': ['̴'], '̰': ['͝'], '̱': ['̿'], '̲': ['̸', '̺'], '̳': ['̼'], '̴': ['̓'], '̵': ['͉'], '̶': ['͂', '̈́'], '̷': ['͈'], '̸': ['̻', '̀'], '̹': ['̽'], '̺': ['̻'], '̻': ['͏'], '̼': [], '̽': ['́', '͋', '͍'], '̾': ['͑'], '̿': ['͌', '͎', '͐'], '̀': [], '́': ['͆'], '͂': ['͊', '͓'], '̓': ['͛'], '̈́': ['͇'], 'ͅ': ['͘'], '͆': ['͖'], '͇': ['͔', '͗'], '͈': ['͕'], '͉': ['͒'], '͊': [], '͋': ['͚'], '͌': [], '͍': ['͚'], '͎': ['͢'], '͏': ['͙'], '͐': ['͜'], '͑': [], '͒': ['͠'], '͓': ['͞'], '͔': [], '͕': ['͟'], '͖': [], '͗': ['ͥ'], '͘': ['ͤ'], '͙': [], '͚': ['ͦ'], '͛': ['ͣ'], '͜': [], '͝': ['͡', 'ͳ'], '͞': [], '͟': [], '͠': ['ͧ', 'ͩ'], '͡': [], '͢': ['ͪ', 'Ͳ'], 'ͣ': ['ͨ'], 'ͤ': [], 'ͥ': ['Ͱ'], 'ͦ': ['ͯ'], 'ͧ': [], 'ͨ': ['ͬ', 'ͭ'], 'ͩ': ['ͫ'], 'ͪ': ['\u0378'], 'ͫ': ['ͳ'], 'ͬ': ['ͮ'], 'ͭ': ['ͱ', '\u0379'], 'ͮ': [], 'ͯ': [], 'Ͱ': ['ʹ', '͵'], 'ͱ': ['Ͷ'], 'Ͳ': [], 'ͳ': ['ͷ', 'ͻ'], 'ʹ': ['ͼ'], '͵': ['ͺ', 'ͼ'], 'Ͷ': [';'], 'ͷ': [], '\u0378': ['ͽ'], '\u0379': [], 'ͺ': [], 'ͻ': ['Ϳ'], 'ͼ': [], 'ͽ': ['\u0382'], ';': ['\u0381'], 'Ϳ': ['\u0380', '\u0383'], '\u0380': ['Ά'], '\u0381': ['Έ'], '\u0382': ['Ί', 'Ό'], '\u0383': ['΄', '΅', '\u038b'], '΄': ['·'], '΅': ['Σ'], 'Ά': ['Ή', 'Β'], '·': ['Ύ', 'Ώ'], 'Έ': ['Ε'], 'Ή': ['ΐ', 'Λ'], 'Ί': ['Γ'], '\u038b': ['\u038d', 'Α', 'Δ'], 'Ό': [], '\u038d': ['Η', 'Θ'], 'Ύ': ['Ζ', 'Χ'], 'Ώ': [], 'ΐ': [], 'Α': ['Ι'], 'Β': ['Λ', 'Ο'], 'Γ': ['Ρ'], 'Δ': ['Π'], 'Ε': ['Κ', 'Μ'], 'Ζ': ['ά'], 'Η': ['Ν'], 'Θ': ['Ν'], 'Ι': ['Τ'], 'Κ': ['Υ', 'Ω'], 'Λ': ['Ξ', '\u03a2'], 'Μ': ['Υ', 'Ϋ'], 'Ν': [], 'Ξ': ['Φ'], 'Ο': ['Ψ', 'ή'], 'Π': [], 'Ρ': ['Χ'], '\u03a2': [], 'Σ': ['Ϊ', 'β'], 'Τ': [], 'Υ': ['ο'], 'Φ': ['έ'], 'Χ': ['ά', 'ζ'], 'Ψ': ['θ'], 'Ω': ['γ', 'δ'], 'Ϊ': ['ΰ'], 'Ϋ': ['κ', 'ο'], 'ά': ['α', 'ε'], 'έ': ['η', 'ι', 'ξ'], 'ή': ['ί'], 'ί': ['τ'], 'ΰ': ['ν'], 'α': ['μ', 'υ'], 'β': [], 'γ': [], 'δ': ['ρ'], 'ε': ['φ', 'ϋ'], 'ζ': ['ό'], 'η': ['λ'], 'θ': ['π', 'ς'], 'ι': [], 'κ': ['ϙ'], 'λ': ['Ϗ'], 'μ': ['ϑ'], 'ν': ['ώ'], 'ξ': ['ϒ', 'Ϛ'], 'ο': ['σ'], 'π': ['ϛ'], 'ρ': ['ψ', 'ϊ'], 'ς': ['ϓ'], 'σ': ['ύ'], 'τ': ['ϐ'], 'υ': ['χ', 'ω'], 'φ': ['ϒ', 'ϗ', 'Ϛ'], 'χ': [], 'ψ': [], 'ω': [], 'ϊ': ['ϔ'], 'ϋ': [], 'ό': ['Ϙ'], 'ύ': [], 'ώ': ['ϖ'], 'Ϗ': ['ϕ'], 'ϐ': ['Ϩ'], 'ϑ': [], 'ϒ': ['ϝ'], 'ϓ': [], 'ϔ': ['Ϝ', 'ϡ'], 'ϕ': ['Ϡ', 'ϣ', 'Ϫ'], 'ϖ': ['Ϧ', 'ϩ'], 'ϗ': ['Ϥ', 'ϧ'], 'Ϙ': [], 'ϙ': ['Ϟ'], 'Ϛ': ['ϥ'], 'ϛ': ['Ϣ'], 'Ϝ': ['ϟ', 'Ͽ'], 'ϝ': [], 'Ϟ': [], 'ϟ': ['ϲ'], 'Ϡ': ['ϱ'], 'ϡ': ['ϫ', 'ϯ'], 'Ϣ': [], 'ϣ': ['Ϸ'], 'Ϥ': ['ϭ'], 'ϥ': ['Ϯ'], 'Ϧ': ['ϳ', 'ϵ', 'ϸ'], 'ϧ': ['Ϭ'], 'Ϩ': [], 'ϩ': ['ϸ'], 'Ϫ': ['ϳ'], 'ϫ': [], 'Ϭ': [], 'ϭ': ['ϰ', 'ϴ', '϶'], 'Ϯ': [], 'ϯ': ['І'], 'ϰ': ['Ϲ'], 'ϱ': ['Љ'], 'ϲ': ['Ϻ', 'Ѕ'], 'ϳ': ['Ͼ', 'Ћ'], 'ϴ': ['Њ'], 'ϵ': ['ϼ', 'Є'], '϶': ['Ѐ'], 'Ϸ': ['Љ'], 'ϸ': ['Ͼ', 'Ё'], 'Ϲ': ['ϻ', 'Ͻ', 'Ј'], 'Ϻ': ['Ї'], 'ϻ': ['Ђ', 'Ѓ'], 'ϼ': [], 'Ͻ': ['Ѓ'], 'Ͼ': ['Ў', 'П'], 'Ͽ': ['Г'], 'Ѐ': ['Ј'], 'Ё': ['Ѝ', 'Е'], 'Ђ': ['З'], 'Ѓ': ['В'], 'Є': ['О'], 'Ѕ': [], 'І': ['А', 'Х'], 'Ї': ['Ќ', 'Н'], 'Ј': [], 'Љ': ['К'], 'Њ': ['Д'], 'Ћ': ['П'], 'Ќ': ['Џ'], 'Ѝ': ['Б'], 'Ў': ['Й'], 'Џ': ['Л'], 'А': ['С'], 'Б': ['М'], 'В': [], 'Г': ['Ж', 'Ш'], 'Д': ['И', 'У'], 'Е': [], 'Ж': ['Р'], 'З': ['Щ', 'Ы'], 'И': ['Ц'], 'Й': [], 'К': [], 'Л': ['Ф'], 'М': ['а'], 'Н': ['Т', 'Ч', 'ч'], 'О': [], 'П': [], 'Р': ['Ъ'], 'С': [], 'Т': ['д'], 'У': ['Я'], 'Ф': ['е'], 'Х': ['Ь'], 'Ц': ['Э', 'и'], 'Ч': ['з'], 'Ш': ['б'], 'Щ': ['Ю', 'к'], 'Ъ': ['л'], 'Ы': ['ж'], 'Ь': ['й'], 'Э': [], 'Ю': ['в', 'п'], 'Я': [], 'а': ['г', 'м'], 'б': ['о', 'т'], 'в': ['ш'], 'г': [], 'д': [], 'е': ['ф'], 'ж': ['у', 'ц', 'ю'], 'з': ['н'], 'и': ['х'], 'й': ['ч'], 'к': ['ц'], 'л': ['р'], 'м': [], 'н': ['с', 'ъ'], 'о': [], 'п': ['щ'], 'р': [], 'с': ['э'], 'т': [], 'у': ['ш', 'ы'], 'ф': [], 'х': ['ю'], 'ц': ['я'], 'ч': [], 'ш': ['ь'], 'щ': ['ѐ'], 'ъ': [], 'ы': [], 'ь': [], 'э': ['ѓ'], 'ю': ['ё'], 'я': ['ј'], 'ѐ': ['ђ', 'є'], 'ё': [], 'ђ': ['ѕ', 'і', 'ї'], 'ѓ': ['ѝ'], 'є': [], 'ѕ': [], 'і': ['ћ'], 'ї': [], 'ј': ['љ'], 'љ': ['њ', 'ќ', 'Ѡ'], 'њ': ['ѝ', 'Ѣ'], 'ћ': ['ѡ'], 'ќ': ['ў'], 'ѝ': ['џ', 'ѩ'], 'ў': ['Ѥ'], 'џ': ['ѣ', 'ѳ'], 'Ѡ': ['ѥ', 'ѧ'], 'ѡ': [], 'Ѣ': ['Ѧ'], 'ѣ': [], 'Ѥ': ['Ѩ'], 'ѥ': ['ѩ'], 'Ѧ': ['Ѫ', 'ѯ', 'ѳ'], 'ѧ': ['ѫ', 'ѭ'], 'Ѩ': ['ѷ'], 'ѩ': ['Ѭ', 'ѯ', 'ѳ'], 'Ѫ': ['Ѱ'], 'ѫ': ['Ѵ'], 'Ѭ': ['Ѯ', 'Ѳ'], 'ѭ': [], 'Ѯ': ['ѱ'], 'ѯ': ['ѹ', 'ѻ', 'Ѽ'], 'Ѱ': ['ѵ', 'Ҁ'], 'ѱ': ['ѿ'], 'Ѳ': ['Ѷ', '҃'], 'ѳ': ['ҁ'], 'Ѵ': [], 'ѵ': ['҇'], 'Ѷ': ['Ѻ'], 'ѷ': ['Ѹ', 'ѽ', '҈'], 'Ѹ': ['҅'], 'ѹ': [], 'Ѻ': ['҂', '҉'], 'ѻ': ['Ѿ'], 'Ѽ': ['҄', '҆'], 'ѽ': ['ҏ'], 'Ѿ': ['ҏ'], 'ѿ': [], 'Ҁ': ['Ҏ'], 'ҁ': [], '҂': ['ҍ'], '҃': ['Ҋ'], '҄': ['Ҍ'], '҅': [], '҆': ['ҋ'], '҇': ['Ґ'], '҈': [], '҉': ['Ғ'], 'Ҋ': [], 'ҋ': ['ҕ'], 'Ҍ': ['ґ', 'җ'], 'ҍ': ['ғ'], 'Ҏ': ['Ҕ', 'Ҙ'], 'ҏ': ['Җ'], 'Ґ': [], 'ґ': [], 'Ғ': [], 'ғ': ['Ҝ'], 'Ҕ': ['ҙ', 'Қ'], 'ҕ': [], 'Җ': [], 'җ': ['қ', 'ҝ'], 'Ҙ': ['Ҟ'], 'ҙ': [], 'Қ': [], 'қ': ['Ҡ'], 'Ҝ': ['ҡ'], 'ҝ': ['ҟ'], 'Ҟ': ['Ң'], 'ҟ': ['Ҥ', 'ҥ', 'Ҧ'], 'Ҡ': [], 'ҡ': ['Ҩ'], 'Ң': ['ң'], 'ң': ['ҭ'], 'Ҥ': ['ҩ'], 'ҥ': ['Ҫ'], 'Ҧ': ['ҧ'], 'ҧ': [], 'Ҩ': ['ҫ'], 'ҩ': ['Ҭ', 'ү'], 'Ҫ': ['Ұ', 'ҳ'], 'ҫ': ['Ү'], 'Ҭ': ['ұ', 'Ҳ'], 'ҭ': ['Ҵ', 'Ҹ'], 'Ү': [], 'ү': ['ҹ'], 'Ұ': ['Ӂ'], 'ұ': ['Ҷ'], 'Ҳ': [], 'ҳ': ['ҵ', 'ҽ'], 'Ҵ': ['ҷ'], 'ҵ': ['Һ', 'Ҽ'], 'Ҷ': ['һ'], 'ҷ': ['ҿ'], 'Ҹ': [], 'ҹ': [], 'Һ': [], 'һ': ['Ҿ'], 'Ҽ': ['Ӏ', 'ӂ'], 'ҽ': ['Ӆ'], 'Ҿ': ['ӄ'], 'ҿ': ['Ӄ'], 'Ӏ': ['ӈ'], 'Ӂ': ['Ӈ'], 'ӂ': ['Ә'], 'Ӄ': ['ӌ'], 'ӄ': [], 'Ӆ': ['ӆ', 'Ӊ'], 'ӆ': ['ӎ'], 'Ӈ': ['ӊ'], 'ӈ': ['ӏ'], 'Ӊ': ['Ӌ', 'Ӗ'], 'ӊ': ['Ӎ'], 'Ӌ': ['Ӑ', 'ӑ'], 'ӌ': [], 'Ӎ': ['ӛ'], 'ӎ': ['Ӓ'], 'ӏ': ['ӓ'], 'Ӑ': ['Ӝ'], 'ӑ': ['ә'], 'Ӓ': ['Ӕ', 'ӕ', 'ӗ'], 'ӓ': ['ӡ'], 'Ӕ': ['Ӛ', 'ӟ'], 'ӕ': [], 'Ӗ': ['Ӟ'], 'ӗ': [], 'Ә': ['Ӛ', 'ӧ'], 'ә': ['ӝ', 'ӥ'], 'Ӛ': [], 'ӛ': ['Ӣ'], 'Ӝ': ['Ӥ'], 'ӝ': ['Ӡ', 'ӣ', 'Ӫ'], 'Ӟ': [], 'ӟ': ['Ӧ'], 'Ӡ': ['Ө', 'ӭ'], 'ӡ': ['ӫ', 'Ӱ'], 'Ӣ': ['Ӭ'], 'ӣ': ['ӱ'], 'Ӥ': ['ө'], 'ӥ': ['ө', 'Ӯ'], 'Ӧ': [], 'ӧ': [], 'Ө': ['Ӽ'], 'ө': ['Ӳ'], 'Ӫ': ['ӳ', 'Ӵ', 'ӷ'], 'ӫ': ['ӵ'], 'Ӭ': ['ӯ'], 'ӭ': ['ӽ'], 'Ӯ': [], 'ӯ': [], 'Ӱ': ['Ӹ', 'ӻ'], 'ӱ': ['Ӷ', 'ӹ'], 'Ӳ': [], 'ӳ': ['ӽ'], 'Ӵ': [], 'ӵ': ['Ӻ'], 'Ӷ': ['Ӿ', 'ԁ', 'Ԃ'], 'ӷ': [], 'Ӹ': [], 'ӹ': ['Ԉ'], 'Ӻ': ['ԉ'], 'ӻ': ['ӿ'], 'Ӽ': ['Ԁ', 'Ԏ'], 'ӽ': ['Ӿ', 'ԃ'], 'Ӿ': ['Ԅ', 'ԋ'], 'ӿ': [], 'Ԁ': ['Ԍ'], 'ԁ': ['Ԋ'], 'Ԃ': ['ԅ', 'Ԇ', 'ԇ'], 'ԃ': ['ԓ'], 'Ԅ': [], 'ԅ': ['Ԓ'], 'Ԇ': [], 'ԇ': ['ԍ', 'ԏ'], 'Ԉ': ['ԋ', 'ԑ'], 'ԉ': ['Ԑ'], 'Ԋ': ['Ԕ', 'ԙ'], 'ԋ': [], 'Ԍ': [], 'ԍ': ['Ԛ'], 'Ԏ': ['ԕ'], 'ԏ': [], 'Ԑ': [], 'ԑ': ['ԛ'], 'Ԓ': ['ԗ', 'Ԙ'], 'ԓ': ['Ԟ'], 'Ԕ': ['Ԗ'], 'ԕ': [], 'Ԗ': ['Ԧ'], 'ԗ': ['Ԝ', 'ԡ'], 'Ԙ': ['ԝ'], 'ԙ': [], 'Ԛ': ['Ԡ', 'Ԥ', 'ԧ'], 'ԛ': ['ԟ'], 'Ԝ': ['Ԣ', 'ԥ'], 'ԝ': ['ԣ'], 'Ԟ': [], 'ԟ': [], 'Ԡ': ['Ԩ', 'ԭ', 'Ԯ'], 'ԡ': ['Ԭ', 'Բ'], 'Ԣ': ['Ԫ'], 'ԣ': ['ԩ', 'ԫ', 'Ա'], 'Ԥ': ['Ԯ'], 'ԥ': [], 'Ԧ': [], 'ԧ': ['ԭ'], 'Ԩ': ['Է'], 'ԩ': ['Դ'], 'Ԫ': ['Ը'], 'ԫ': ['Գ'], 'Ԭ': ['\u0530', 'Ե'], 'ԭ': ['ԯ'], 'Ԯ': [], 'ԯ': ['Զ'], '\u0530': ['Լ'], 'Ա': ['Ի'], 'Բ': ['Ե'], 'Գ': [], 'Դ': [], 'Ե': ['Թ'], 'Զ': [], 'Է': ['Ժ', 'Ծ'], 'Ը': ['Խ'], 'Թ': [], 'Ժ': ['Կ', 'Հ'], 'Ի': [], 'Լ': [], 'Խ': [], 'Ծ': ['Ձ'], 'Կ': [], 'Հ': ['Ղ'], 'Ձ': [], 'Ղ': ['Ճ'], 'Ճ': []}


print(adj)
stotal = 0
total =0 

s = set()
def depends(cur, dep):
    flag = True 
    for k2, v2 in adj.items():
        if dep in v2 and k2 != cur and k2 not in s:
            flag = False

    return flag


for k, v in adj.items():
    s = set()
    flag = False 
    for dep in v:
        is_dependent = depends(k,dep)
        if is_dependent:
            q = [dep]
            while q:
                cur = q.pop()
                s.add(cur)
                for vv in adj[cur]:
                    if depends(cur, vv):
                        q.append(vv)
            flag = True
        continue 

    if not flag:
        total += 1
        #print(k)
    print(s)
    stotal += len(s)
print(total)
print(stotal)
    


"""

"""